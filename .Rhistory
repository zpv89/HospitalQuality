find.package("devtools")
install.packages("devtools")
find_rtools()
install.packages("Rtools")
install.packages("Rtools")
find_rtools()
install.packages("KernSmooth")
library(KernSmooth)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
x <- matrix()
x[[1][1,]]<-c(1:5)
x[[1][1]<-c(1:5)
x[[1][1,]]<-c(1:5)
x[[1]][1,]<-c(1:5)
x[[1]]<-c(1:5)
x<-c(1:5)
x
x[2,]<c(5:10)
x[2]<c(5:10)
x
x<-NULL
x<-c(1:20)
x<-matrix(x,nrow=5)
x
cacheSolve(x)
class(x)
test <- makeCacheMatrix(x)
test$get()
test$getInverse()
cacheSolve(test)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
x
test2<-makeCacheMatrix(x)
test2$get()
test2$getInverse()
cacheSolve(test2)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
test2<-makeCacheMatrix(x)
test2$get()
test2:$getInverse()
test2$getInverse()
cacheSolve(test2)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
cacheSolve(test2)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
cacheSolve(test2)
x<-NULL
test<-NULL
test2<-NULL
x <- c(1:25)
x
test<-matrix(x,nrow=5)
test
test <- makeCacheMatrix(test)
test$get()
test
x
test<-null
test<-NULL
x<-matrix(x,nrow=5)
x
test<- makeCacheMatrix(x)
test
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
test<-NULL
test<-makeCacheMatrix(x)
test
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
x <- c(1:25)
x<-matrix(x,nrow=5)
x
test<-makeCacheMatrix(x)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
test<-makeCacheMatrix(x)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
test<-makeCacheMatrix(x)
source("cachematrix")
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
x <- c(1:25)
x<-matrix(x,nrow=5)
x
test<-makeCacheMatrix(x)
test
test$get()
test$getInverse()
cacheSolve(test)
cacheSolve(test)
x<-NULL
tes<=NULL
test<=NULL
test<-NULL
x<-rbind(c(-1,1.5),c(1,-1))
x
test<-makeCacheMatrix(x)
test$get()
test$getInverse()
cacheSolve(test)
cacheSolve(test)
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
source('~/CourseraR/ProgrammingAssignment2/cachematrix.R')
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
setwd("~/CourseraR/R_Programming_Course/HospitalQuality")
outcome<-read.csv("outcome-of-care-measures.csv",colClasses = "character")
head(outcome)
ncol(outcome)
outcome[,11]<-as.numeric(outcome[,11])
hist(outcome[,11])
names(outcome
)
as.list(unique(outcome[,7]))
names(outcome)
test <- as.list(unique(data$State))
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
df
outcome
df<-data.frame(outcome$Hospital.Name,outcome$State)
names(df)
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Rename some columns for ease of coding later
colnames(data)[11] <- "heart attack"
colnames(data)[17] <- "heart failure"
colnames(data)[23] <- "pneumonia"
df <- data.frame(data$Hospital.Name,data$State,data$"heart attack",data$"heart failure",data$pneumonia)
df
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
View(outcome)
View(df)
View(df)
best("TX","heart failure")
best("MD","heart attack")
best("MD","death")
best("ZX","heart attack")
best("MD","pneumonia")
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Rename some columns for ease of coding later
colnames(data)[11] <- "heart attack"
colnames(data)[17] <- "heart failure"
colnames(data)[23] <- "pneumonia"
df <- data.frame(data$Hospital.Name,data$State,data$"heart attack",data$"heart failure",data$pneumonia)
## rename columns again for ease later
colnames(df) <- c("Hospital.Name","State","heart attack","heart failure","pneumonia")
state<-"TX"
get_state_data <- subset(df,State==state)
head(get_state_data)
outcome <-"heart attack"
get_state_data[[outcome]]
outcome<-"heart failure"
get_state_data[[outcome]]
subsettest<- get_state_data[[outcome]]
subsettest<- as.numeric(get_state_data[[outcome]])
ranking <- rank(get_state_data[[outcome]])
lowest <- which.min(ranking)
View(get_state_data)
View(get_state_data)
hname<- get_state_data[lowest,1]
hname<- as.character(get_state_data[lowest,1])
?rank
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
best("TX","heart failure")
colclasses(get_state_data)
colClasses(get_state_data)
colClass(get_state_data)
?colClass
??colClasses
sapply(get_state_data,class)
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
cols_to_change = c(3:5)
for(i in cols_to_change){
class(df[, i]) = "numeric"
}
get_state_data <- subset(df,State==state)
sapply(get_state_data,class)
View(get_state_data)
View(get_state_data)
View(df)
View(df)
sapply(df,class)
View(data)
View(data)
sapply(data,class)
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
df <- data.frame(data$Hospital.Name,data$State,data$"heart attack",data$"heart failure",data$pneumonia)
## rename columns again for ease later
colnames(df) <- c("Hospital.Name","State","heart attack","heart failure","pneumonia")
cols_to_change = c(1:5)
for(i in cols_to_change){
class(df[, i]) = "character"
}
sapply(df,class)
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart attack")
best("TX","heart failure")
View(df)
View(df)
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart failure")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart failure")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart failure")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart failure")
source('~/CourseraR/R_Programming_Course/HospitalQuality/best.R')
best("TX","heart failure")
best("MD","heart failure")
best("MD","heart attack")
best("MD","pneumonia")
best("SC","heart attack")
best("NY","pneumonia")
best("AK","pneumonia")
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
?if
else
?else
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",4)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",4)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",4)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",4)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",4)
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Rename & reclass some columns for ease of coding later
colnames(data)[11] <- "heart attack"
colnames(data)[17] <- "heart failure"
colnames(data)[23] <- "pneumonia"
data[, 11] <- as.numeric(data[, 11])
data[, 17]<-as.numeric(data[, 17])
data[, 23]<-as.numeric(data[, 23])
df=data.frame(data$Hospital.Name,  data$State, data[[outcome]])
colnames(df)[1]<-"Hospital.Name"
colnames(df)[2]<- "State"
colnames(df)[3]<- "Rate"
df[, 3]<-as.numeric(df[, 3])
View(df)
View(df)
df_clean <- df[ ! is.na( df[, 3] ) , ]
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
get_state_data=subset(df_clean, State==state)
ranking <- rank(get_state_data[,3],na.last = TRUE)
ranked <- order(get_state_data[,3],na.last = TRUE)
final <- data.frame(get_state_data$Hospital.Name,get_state_data[,3],ranked)
colnames(final)[1]<-"Hospital.Name"
colnames(final)[2]<- "Rate"
colnames(final)[3]<- "Ranking"
final[, 2]<-as.numeric(final[, 2])
final[,3]<-as.numeric(final[,3])
View(final)
View(final)
hospital <- which.min(ranking)
best <- final[hospital,1]
print(as.character(best))
hospital <- which.max(ranking)
worst <- final[hospital,1]
print(as.character(worst))
num <- 5
hospital <- match(num,ranking)
output <- final[hospital,1]
print(as.character(output))
?match
rankhospital("MD","heart attack","worst")
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("MD","heart attack","worst")
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("MD","heart attack","worst")
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Rename & reclass some columns for ease of coding later
colnames(data)[11] <- "heart attack"
colnames(data)[17] <- "heart failure"
colnames(data)[23] <- "pneumonia"
data[, 11] <- as.numeric(data[, 11])
data[, 17]<-as.numeric(data[, 17])
data[, 23]<-as.numeric(data[, 23])
df=data.frame(data$Hospital.Name,  data$State, data[[outcome]])
colnames(df)[1]<-"Hospital.Name"
colnames(df)[2]<- "State"
colnames(df)[3]<- "Rate"
df[, 3]<-as.numeric(df[, 3])
## Clean the data of NaNs
df_clean <- df[ ! is.na( df[, 3] ) , ]
## Get the required state data
get_state_data=subset(df_clean, State==state)
ranking <- rank(get_state_data[,3],na.last = TRUE)
ranked <- order(get_state_data[,3],na.last = TRUE)
final <- data.frame(get_state_data$Hospital.Name,get_state_data[,3],ranked)
colnames(final)[1]<-"Hospital.Name"
colnames(final)[2]<- "Rate"
colnames(final)[3]<- "Ranking"
final[, 2]<-as.numeric(final[, 2])
final[,3]<-as.numeric(final[,3])
if (num == "best"){
hospital <- which.min(ranking)
best <- final[hospital,1]
print(as.character(best))
} else if (num == "Worst"){
hospital <- which.max(ranking)
worst <- final[hospital,1]
print(as.character(worst))
} else if (num %in% ranked){
hospital <- match(num,ranking)
output <- final[hospital,1]
print(as.character(output))
}
View(final)
View(final)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("MD","heart attack","worst")
rankhospital("TX","heart failure",5)
View(get_state_data)
View(get_state_data)
?order
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",5)
rankhospital("TX","heart failure",5)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",5)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",5)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
rankhospital("TX","heart failure",5)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
data <- read.csv("outcome-of-care-measures.csv",colClasses = "character")
## Rename & reclass some columns for ease of coding later
colnames(data)[11] <- "heart attack"
colnames(data)[17] <- "heart failure"
colnames(data)[23] <- "pneumonia"
data[, 11] <- as.numeric(data[, 11])
data[, 17]<-as.numeric(data[, 17])
data[, 23]<-as.numeric(data[, 23])
df=data.frame(data$Hospital.Name,  data$State, data[[outcome]])
colnames(df)[1]<-"Hospital.Name"
colnames(df)[2]<- "State"
colnames(df)[3]<- "Rate"
df[, 3]<-as.numeric(df[, 3])
## Clean the data of NaNs
df_clean <- df[ ! is.na( df[, 3] ) , ]
## Get the required state data
get_state_data=subset(df_clean, State==state)
ranking <- rank(get_state_data[,3],na.last = TRUE)
final <- data.frame(get_state_data$Hospital.Name,get_state_data[,3],ranking)
colnames(final)[1]<-"Hospital.Name"
colnames(final)[2]<- "Rate"
colnames(final)[3]<- "Ranking"
final[, 2]<-as.numeric(final[, 2])
final[,3]<-as.numeric(final[,3])
View(final)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
final <- data.frame(get_state_data$Hospital.Name,get_state_data[,3],ranking)
colnames(final)[1]<-"Hospital.Name"
colnames(final)[2]<- "Rate"
colnames(final)[3]<- "Ranking"
final[, 2]<-as.numeric(final[, 2])
final[,3]<-as.integer(final[,3])
final[order(final$Ranking,na.last = TRUE)]
final<-order(final$Ranking,na.last = TRUE)
source('~/CourseraR/R_Programming_Course/HospitalQuality/rankhospital.R')
